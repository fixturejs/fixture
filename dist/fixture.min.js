/*!
Fixture - v1.0.0 - 2014-03-29
https://github.com/kflorence/fixture
A simple, lightweight JavaScript fixture API.

Copyright (C) 2014 Kyle Florence
Released under the BSD, MIT licenses
*/
!function(root,factory){"function"==typeof define&&define.amd?define(factory):root.Fixture=factory()}(this,function(){function clone(source){var key,cloned={};for(key in source)cloned[key]=source[key];return cloned}function extend(source,target){var key;target=target||{};for(key in target)source[key]=target[key];return source}function noop(){}function typeOf(thing){return null==thing?thing+"":typeof thing}function Fixture(settings){return Fixture.isFixture(this)?(this.data={},this.options={},this.uuid=uuid++,void extend(this,settings)):new Fixture(settings)}var uuid=0;return extend(Fixture.prototype,{attach:noop,detach:noop,equals:function(fixture){return Fixture.isFixture(fixture)&&this.uuid===fixture.uuid},toString:function(){return"Fixture:"+this.uuid},use:noop}),extend(Fixture,{create:function(mixed){var fixture;return mixed=this.normalize(mixed),mixed&&(fixture=new Fixture(mixed)),fixture},define:function(proto){if("object"!==typeOf(proto)||"string"!==typeOf(proto.name)||"function"!==typeOf(proto.attach)&&"function"!==typeOf(proto.detach)&&"function"!==typeOf(proto.use))throw"Invalid Fixture prototype.";this.prototypes[proto.name]=proto},equals:function(first,second){return this.isFixture(first)&&first.equals(second)},get:function(name,settings){var proto;if("string"===typeOf(name))return name=name.split(".")[0],proto=this.prototypes[name],proto&&(proto=extend(clone(proto),settings)),proto},prototypes:{},isFixture:function(){var matches,rFunctionName=/function ([^(]+)/;return function(object){return"object"===typeOf(object)&&object.constructor&&(matches=rFunctionName.exec(object.constructor.toString()))&&matches[1]&&"fixture"===matches[1].toLowerCase()}}(),normalize:function(mixed){var fixture,type=typeOf(mixed);return"string"===type?fixture=this.get(mixed):"function"===type?fixture={use:mixed}:"object"===type?fixture=this.get(mixed.name,mixed)||mixed:this.isFixture(mixed)&&(fixture=mixed),fixture}}),Fixture});