/*!
Fixture - v1.2.0 - 2014-06-22
https://github.com/kflorence/fixture
A simple, lightweight JavaScript fixture API.

Copyright (C) 2014 Kyle Florence
Released under the BSD, MIT licenses
*/
!function(root,factory){"function"==typeof define&&define.amd?define(factory):root.Fixture=factory()}(this,function(){function clone(source){var key,cloned={};for(key in source)cloned[key]=source[key];return cloned}function extend(source,target){var key;target=target||{};for(key in target)source[key]=target[key];return source}function noop(){}function Fixture(settings){return Fixture.isFixture(this)?(this.data={},this.uuid=uuid++,void extend(this,settings)):new Fixture(settings)}var fixtures={},typeOf=function(){var matches,type,rFunctionName=/function ([^(]+)/;return function(value){return null==value?value+"":"object"==(type=typeof value)||"function"===type?(matches=rFunctionName.exec(value.constructor.toString()))&&matches[1]&&matches[1].toLowerCase()||"object":type}}(),uuid=0;return extend(Fixture.prototype,{attach:noop,detach:noop,equals:function(other){return Fixture.isFixture(other)&&this.uuid===other.uuid},interact:noop,toString:function(){return"Fixture:"+this.uuid},verify:noop}),extend(Fixture,{create:function(value){var fixture;return value=this.normalize(value),value&&(fixture=new Fixture(value)),fixture},define:function(name,definition,force){if("object"===typeOf(name)&&(force=definition,definition=name,name=definition.name),definition=this.normalize(definition),definition.name=name,"object"!==typeOf(definition)||"string"!==typeOf(definition.name)||"function"!==typeOf(definition.attach)&&"function"!==typeOf(definition.detach)&&"function"!==typeOf(definition.interact)&&"function"!==typeOf(definition.verify))throw"Fixture definition is invalid.";if(void 0!==fixtures[name]&&force!==!0)throw"Fixture definition name already exists: "+name;return fixtures[name]=definition},equal:function(first,second){return this.isFixture(first)&&first.equals(second)},get:function(name,settings){var definition;if("string"===typeOf(name))return name=name.split(".")[0],definition=fixtures[name],definition&&(definition=extend(clone(definition),this.normalize(settings))),definition},isFixture:function(value){return"fixture"===typeOf(value)},list:function(filter){var name,list=[];filter=filter||noop;for(name in fixtures)filter(name,fixtures[name])!==!1&&list.push(name);return list},normalize:function(value){var normalized,type=typeOf(value);return"string"===type?normalized=this.get(value):"function"===type?normalized={interact:value}:"object"===type?normalized=this.get(value.name,value)||value:this.isFixture(value)&&(normalized=value),normalized},remove:function(name){var i=0,names="array"===typeOf(name)?name:[name];for(i=0;i<names.length;i++)name=names[i],fixtures[name]&&delete fixtures[name]}}),Fixture});